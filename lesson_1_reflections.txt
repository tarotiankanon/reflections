How did viewing a diff between two versions of a file help you see the bug that was introduced?
The diff -u command shows the insertions and deletions of two different files and their line numbers
How could having easy access to the entire history of a file make you a more efficient programmer in the long term?
We can rewind to the old changes if we need to. We can add new features without affecting our core code by using branches
What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?
Manual-pros: Commit for each logical changes only. The commits will not be bloated and contain only sufficient information to the user. Manual-cons: Your logical judgement call might be wrong in some case. You forgot to commit, or you accidently unsaved a file
Why do you think some VCS, like Git, allowing saving multiple files in one commit, while others, like Google Docs, treat each file separately?
Because coder always work with multiple files that are related to each other
How can you use the commands git log and git diff to view the histoty of files?
git log is use to log all of the commits being made. git diff is use to compare two different files by passing the commit Ids as arguments
How might using version control make you more confident to make changes that could break something?
VCS allows us to revert back to any commits any time :)
Now that you have your workspace set up, what do you want to try using Git for?
Any projects that take time, might be even photoshop files for design, or even drawing files?
